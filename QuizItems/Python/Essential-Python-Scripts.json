[
  {
    "id": 1,
    "topic": "Python",
    "subcategory": "Essential Python Scripts",
    "type": "text-editor",
    "question": "Write a Python script that solves the Two Sum problem, where you find two numbers in a list that add up to a target value.",
    "correct_answer": "def two_sum(nums, target):\n    seen = {}\n    for i, num in enumerate(nums):\n        complement = target - num\n        if complement in seen:\n            return [seen[complement], i]\n        seen[num] = i\n    return []\n\nprint(\"Two Sum:\", two_sum([2, 7, 11, 15], 9))"
  },
  {
    "id": 2,
    "topic": "Python",
    "subcategory": "Essential Python Scripts",
    "type": "text-editor",
    "question": "Write a Python script that reverses a given string.",
    "correct_answer": "def reverse_string(s):\n    return s[::-1]\n\nprint(\"Reversed String:\", reverse_string(\"hello\"))"
  },
  {
    "id": 3,
    "topic": "Python",
    "subcategory": "Essential Python Scripts",
    "type": "text-editor",
    "question": "Write a Python script that finds the maximum subarray sum using Kadane's Algorithm.",
    "correct_answer": "def max_subarray(nums):\n    max_sum = cur_sum = nums[0]\n    for num in nums[1:]:\n        cur_sum = max(num, cur_sum + num)\n        max_sum = max(max_sum, cur_sum)\n    return max_sum\n\nprint(\"Maximum Subarray Sum:\", max_subarray([-2,1,-3,4,-1,2,1,-5,4]))"
  },
  {
    "id": 4,
    "topic": "Python",
    "subcategory": "Essential Python Scripts",
    "type": "text-editor",
    "question": "Write a Python script that checks if a given string is a palindrome.",
    "correct_answer": "def is_palindrome(s):\n    return s == s[::-1]\n\nprint(\"Is Palindrome:\", is_palindrome(\"racecar\"))"
  },
  {
    "id": 5,
    "topic": "Python",
    "subcategory": "Essential Python Scripts",
    "type": "text-editor",
    "question": "Write a Python script that merges two sorted linked lists.",
    "correct_answer": "class ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\ndef merge_two_lists(l1, l2):\n    dummy = ListNode()\n    current = dummy\n    while l1 and l2:\n        if l1.val < l2.val:\n            current.next = l1\n            l1 = l1.next\n        else:\n            current.next = l2\n            l2 = l2.next\n        current = current.next\n    current.next = l1 or l2\n    return dummy.next\n\nprint(\"Merge Two Sorted Lists function defined.\")"
  }
]
